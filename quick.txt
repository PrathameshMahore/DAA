// Shree Ganesha
#include <stdio.h>

int partition(int arr[], int lb, int ub);

void quickSort(int arr[], int lb, int ub) {
    if (lb < ub) {
        int pos = partition(arr, lb, ub);
        quickSort(arr, lb, pos - 1);
        quickSort(arr, pos + 1, ub);
    }
}

int partition(int arr[], int lb, int ub) {
    int pivot = arr[lb];
    int start = lb;
    int end = ub;
    while (start < end) {
        while (arr[start] <= pivot && start < ub) {
            start++;
        }
        while (arr[end] > pivot) {
            end--;
        }
        if (start < end) {
            int temp = arr[start];
            arr[start] = arr[end];
            arr[end] = temp;
        }
    }
    int temp = arr[lb];
    arr[lb] = arr[end];
    arr[end] = temp;
    return end;
}

int main() {
    printf("Enter the array size:\n");
    int n;
    scanf("%d", &n);

    printf("Enter the elements:\n");
    int arr[n];
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    printf("Before Sorting:\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t", arr[i]);
    }
    printf("\n");

    int lb = 0, ub = n - 1;
    quickSort(arr, lb, ub);

    printf("After Sorting:\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t", arr[i]);
    }
    printf("\n");

    return 0;
}
