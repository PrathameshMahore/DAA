#include <stdio.h>
#include <stdbool.h>
#include<stdlib.h>

bool place(int arr[],int k, int i)
{
    int j;
    for(j = 1; j<=k-1;j++)
    {
        if(arr[j] == i || abs(arr[j]-i) == abs(j-k))
        {
            return false;
        }
    }
    return true;
}

void nqueens(int arr[],int k,int n)
{
    int i;
    for(i=1;i<=n;i++)
    {
      if (place(arr,k,i) == true)
        {
            arr[k] = i;
           
            if(k == n)
            {
             static int l = 1;
                printf("nqueens solution %d \n",l);
                l++;
                for(i =1;i<=n;i++)
                {
                    printf("queen %d - position %d",i,arr[i]);
                    printf("\n");
                }
                int ar[n][n];
                for(int j = 0 ; j<n;j++)
                {
                    for(int k =0;k<n;k++)
                    {
                        ar[j][k] = 0;
                    }
                }
                for(int j = 0 ; j<n ;j++)
                {
                    for(int k =0;k<n;k++)
                    {
                        ar[j][(arr[j+1])-1] = 1;
                    }
                }
               
                for(int j = 0 ; j<n;j++)
                {
                    for(int k =0;k<n;k++)
                    {
                       printf("|%d| ",ar[j][k]) ;
                    }
                    printf("\n");
                }
            }
           
            else{
                nqueens(arr,k+1,n);
            }
        }      
    }
   
}

int main()
{
    int n;
  printf("enter no of queens available on board");
  scanf("%d",&n);
  int arr[n+1];
  nqueens(arr,1,n);
  return 0;
 
}

output:
enter no of queens available on board4
nqueens solution 1 
queen 1 - position 2
queen 2 - position 4
queen 3 - position 1
queen 4 - position 3
|0| |1| |0| |0| 
|0| |0| |0| |1| 
|1| |0| |0| |0| 
|0| |0| |1| |0| 
nqueens solution 2 
queen 1 - position 3
queen 2 - position 1
queen 3 - position 4
queen 4 - position 2
|0| |0| |1| |0| 
|1| |0| |0| |0| 
|0| |0| |0| |1| 
|0| |1| |0| |0| 


=== Code Execution Successful ===